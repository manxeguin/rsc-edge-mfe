{"version":3,"file":"main.7148ada1de08eb51830c.js","mappings":";ghBACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XAEA,SAASC,IACP,OAAO,IAAIC,GACb,CAEO,SAASC,IACd,OAAO,SAAiBC,EAAKC,GAC3BC,aAAaL,EAAqB,IAAIC,IAAI,CAAC,CAACE,EAAKC,KACnD,CACF,CAEA,IAAME,EAAiB,eAZvB,EAYuB,GAZvB,EAYuB,UAAG,WAAOC,GAAW,yEAEP,OAA7BC,EAAiBC,MAAM,OAAM,UACdC,EAAAA,EAAAA,iBAAgBF,GAAe,OAAxC,OAANG,EAAS,EAAH,uBACLA,GAAM,0CAhBf,+KAiBC,gBALsB,sCAOhB,SAASC,EAAkBC,GAChC,QAAoD,MAAdC,EAAAA,EAAAA,UAAS,QAAK,o5BAA7CC,EAAQ,KAAEC,EAAiB,KAC5Bb,EAAMc,KAAKC,UAAUL,GAQ3B,OANAM,EAAAA,EAAAA,YAAU,WACRb,EAAkBH,GAAKiB,MAAK,SAACC,GAC3BL,EAAkBK,EACpB,GACF,GAAG,CAAClB,IAEGY,CACT,gOCxBO,IAAMO,GAAkBC,EAAAA,EAAAA,iBACxB,SAASC,IACZ,OAAOC,EAAAA,EAAAA,YAAWH,EACtB,CAEe,SAASI,EAAK,GACzB,OADuC,EAAZC,aAEvB,gBAAC,EAAAC,SAAQ,CAACC,SAAU,MAChB,gBAAC,EAAAC,cAAa,CAACC,kBAAmBC,GAC9B,gBAACC,EAAO,OAIxB,CAEA,SAASA,IACL,QAIE,MAJ8BnB,EAAAA,EAAAA,UAAS,CACrCoB,WAAY,KACZC,WAAW,EACXC,WAAY,OACd,o5BAJKvB,EAAQ,KAAEwB,EAAW,KAMtBC,GAAY1B,EAAAA,EAAAA,mBAAkBC,GAEpC,OACI,gBAACS,EAAgBiB,SAAQ,CAACC,MAAO,CAAC3B,EAAUwB,IACvCC,EAGb,CAEA,SAASN,EAAM,GAAW,IAATS,EAAK,EAALA,MACb,OACI,2BACI,sBAAIC,UAAU,gBAAe,qBAC7B,uBAAKC,MAAO,CAAEC,WAAY,aAAeH,EAAMI,OAG3D","sources":["webpack://rsc-mfe/./src/Cache.client.js","webpack://rsc-mfe/./src/Root.client.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createFromFetch } from \"react-server-dom-webpack/client\";\n\nfunction createResponseCache() {\n  return new Map();\n}\n\nexport function useRefresh() {\n  return function refresh(key, seededResponse) {\n    refreshCache(createResponseCache, new Map([[key, seededResponse]]));\n  };\n}\n\nconst getFlightResponse = async (locationKey) => {\n  //const flightResponse = fetch(\"/react?location=\" + encodeURIComponent(locationKey));\n  const flightResponse = fetch(\"rsc\");\n  const flight = await createFromFetch(flightResponse);\n  return flight;\n};\n\nexport function useServerResponse(location) {\n  const [Response, setServerResponse] = useState(null);\n  const key = JSON.stringify(location);\n\n  useEffect(() => {\n    getFlightResponse(key).then((res) => {\n      setServerResponse(res);\n    });\n  }, [key]);\n\n  return Response;\n}\n","import React from \"react\";\nimport { useState, Suspense } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nimport { useServerResponse } from \"./Cache.client\";\nimport { createContext, useContext } from \"react\";\n\nexport const LocationContext = createContext();\nexport function useLocation() {\n    return useContext(LocationContext);\n}\n\nexport default function Root({ initialCache }) {\n    return (\n        <Suspense fallback={null}>\n            <ErrorBoundary FallbackComponent={Error}>\n                <Content />\n            </ErrorBoundary>\n        </Suspense>\n    );\n}\n\nfunction Content() {\n    const [location, setLocation] = useState({\n        selectedId: null,\n        isEditing: false,\n        searchText: \"\",\n    });\n\n    const Component = useServerResponse(location);\n\n    return (\n        <LocationContext.Provider value={[location, setLocation]}>\n            {Component}\n        </LocationContext.Provider>\n    );\n}\n\nfunction Error({ error }) {\n    return (\n        <div>\n            <h1 className=\"text-red-500\">Application Error</h1>\n            <pre style={{ whiteSpace: \"pre-wrap\" }}>{error.stack}</pre>\n        </div>\n    );\n}\n"],"names":["i","createResponseCache","Map","useRefresh","key","seededResponse","refreshCache","getFlightResponse","locationKey","flightResponse","fetch","createFromFetch","flight","useServerResponse","location","useState","Response","setServerResponse","JSON","stringify","useEffect","then","res","LocationContext","createContext","useLocation","useContext","Root","initialCache","Suspense","fallback","ErrorBoundary","FallbackComponent","Error","Content","selectedId","isEditing","searchText","setLocation","Component","Provider","value","error","className","style","whiteSpace","stack"],"sourceRoot":""}